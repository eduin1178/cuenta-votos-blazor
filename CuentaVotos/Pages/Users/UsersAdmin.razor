@page "/Admin/Users"
@attribute [Authorize]
@using CuentaVotos.Core.Users;
@using CuentaVotos.Entities.Account;
@inject UsersManager Model
@inject SweetAlertService _swal
@inject IToaster _toaster

@if (Model.Users != null)
{
    <div class="row">

        @foreach (var item in Model.Users)
        {
            <div class="col-lg-6 col-xl-4 mb-2">
                <Card>
                    <Header>
                        <button class="btn btn-sm btn-outline-danger float-end"
                        title="Eliminar usuario"
                        @onclick="()=>Delete(item)">
                            <i class="oi oi-trash"></i>
                        </button>
                        <span class="h6">
                            @item.FirstName @item.LastName
                        </span>
                    </Header>
                    <Body>
                        <div class="row">
                            <div class="col-12">
                                @item.Role - @item.State
                            </div>
                            <div class="col-12 mt-2">
                                <small>
                                    <i class="oi oi-envelope-closed"></i> @item.Email
                                </small>
                                <br />
                                <small>
                                    <i class="oi oi-phone"></i> @item.PhoneNumber
                                </small>

                            </div>
                            <div class="col-12 mt-3">
                                <div class="btn-group">
                                    @if (item.RoleId == 0)
                                    {
                                        <button class="btn btn-sm btn-outline-success"
                                    @onclick="()=>Model.ChangeToUser(item)"
                                    title="Convertir en usuario estandar">
                                            <i class="oi oi-person"></i> Rol
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-sm btn-outline-success"
                                    @onclick="()=>Model.ChangeToAdmin(item)"
                                    title="Convertir en administrador">
                                            <i class="oi oi-people"></i> Rol
                                        </button>
                                    }

                                    @if (item.StateId == 0)
                                    {
                                        <button class="btn btn-sm btn-outline-success"
                                    @onclick="()=>Model.Activate(item)"
                                    title="Activar usuario">
                                            <i class="oi oi-battery-empty"></i> Estado
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-sm btn-outline-success"
                                    @onclick="()=>Model.Deactivate(item)"
                                    title="Inactivar usuario">
                                            <i class="oi oi-battery-full"></i> Estado
                                        </button>
                                    }
                                    <button class="btn btn-sm btn-outline-secondary"
                                    title="Restablecer contraseña"
                                    @onclick="()=>ShowModal(item)">
                                        <i class="oi oi-key"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </Body>
                </Card>


            </div>
        }

    </div>
}


<Modal Title="Restablecer clave" @ref="Modal">
    <Content>
        <span>Nueva contraseña</span>
        <input type="password" class="form-control"
               @bind="NewPassword" placeholder="Nueva contraseña" />
        <button class="btn btn-success mt-3"
                @onclick="ChangePassword">
            <i class="oi oi-reload"></i> Restablecer clave
        </button>
    </Content>
</Modal>



@code {

    public Modal? Modal { get; set; }
    public UserModel SelectedUser { get; set; }
    public string NewPassword { get; set; } = string.Empty;

    protected async Task Delete(UserModel model)
    {
        var confirm = await _swal.FireAsync(new SweetAlertOptions
            {
                Title = "Confirmar eliminación!",
                Text = "¿Confirma que desea elimianr este usuario? Esta operación no se puede revertir",
                ShowCancelButton = true,
                ShowConfirmButton = true,
                ConfirmButtonText = "Eliminar",
                CancelButtonText = "Cancelar"
            });

        if (!confirm.IsConfirmed)
        {
            return;
        }

        var res = Model.Delete(model);
        if (res.IsSuccess)
        {
            _toaster.Success(res.Message);
            Model.Load();
        }
        else
        {
            _toaster.Error(res.Message);
        }
    }

    protected async void ShowModal(UserModel model)
    {
        SelectedUser = model;
        await Modal.OpenModal();
    }
    protected async Task ChangePassword()
    {
        var res = Model.ResetPassword(SelectedUser, NewPassword);
        if (res.IsSuccess)
        {
            _toaster.Success(res.Message);
            await Modal.CloseModal();
        }
        else
        {
            _toaster.Error(res.Message);
        }


    }
}
