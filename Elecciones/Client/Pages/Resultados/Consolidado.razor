@page "/Resultados/Consolidado"
@using Microsoft.AspNetCore.SignalR.Client;

<PageTitle>Resultados</PageTitle>
<Card>
    <Header>
        <button class="btn btn-sm btn-outline-secondary float-end"
        @onclick="CargarResultados">
            <i class="oi oi-reload"></i> Actualizar
        </button>
        <h4>Resultados</h4>
    </Header>

    <Body>
        <div class="row mb-3">
            <div class="col-lg-4">
                <label>Cargo</label>
                <select class="form-select" value="@IdCargo" @onchange="AlCambiarCargo">
                    @if (ListaCargos != null)
                    {
                        if (ListaCargos.Count > 0)
                        {
                            foreach (var item in ListaCargos)
                            {
                                <option value="@item.Id">@item.Nombre</option>

                            }
                        }
                        else
                        {
                            <option>No hay cargos</option>
                        }
                    }
                    else
                    {
                        <option value="0">Cargando...</option>
                    }
                </select>
            </div>
            <div class="col-lg-4">
                <label>Puesto</label>
                <select class="form-select" value="@IdPuesto"
                @onchange="AlCambiarPuesto">
                    <option value="0">Todos</option>
                    @if (Puestos == null)
                    {
                        <option>Cargando...</option>
                    }
                    else
                    {
                        @foreach (var puesto in Puestos)
                        {
                            <option value="@puesto.Id">@puesto.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="col-lg-4">
                <label>Mesa</label>
                <select class="form-select" value="@IdMesa"
                @onchange="AlCambiarMesa">
                    <option value="0">Todas</option>
                    @if (Puestos == null)
                    {
                        <option>Cargando...</option>
                    }
                    else
                    {
                        if (IdPuesto > 0)
                        {
                            @foreach (var mesa in Puestos.FirstOrDefault(x => x.Id == IdPuesto).ListaMesas.OrderBy(x => x.Number).ToList())
                            {
                                <option value="@mesa.Id">@mesa.Name</option>
                            }
                        }
                    }
                </select>
            </div>
        </div>
        <div class="row">
            <ProgressBar Visible="_apiClient.Cargando" />
        </div>
        <div class="row mb-3">
            <div class="col">

                @if (Resultados != null)
                {
                    @foreach (var resultado in Resultados)
                    {
                        <Card>
                            <Header>
                                <button class="btn btn-link text-dark btn-sm float-end"
                                @onclick="(()=>resultado.ToggleExpandido())">
                                    @if (resultado.Expandido)
                                    {
                                        <i class="oi oi-collapse-up"></i>

                                    }
                                    else
                                    {
                                        <i class="oi oi-expand-down"></i>
                                    }
                                </button>
                                <div class="flex-row d-flex align-items-center gap-3">
                                    <img src="@resultado.LogoPartido" width="40" height="40" class="rounded-circle" />
                                    <span class="h4 align-content-center">
                                        <strong>
                                            @resultado.NombrePartido
                                        </strong>
                                    </span>
                                </div>
                            </Header>

                            <Body>
                                @if (resultado.Expandido)
                                {
                                    @foreach (var detalle in resultado.Detalles)
                                    {
                                        <div class="list-group-item">
                                            <div class="row">
                                                <div class="col-md-2">

                                                    <img src="@detalle.FotoCandidatoUrl" width="50" height="70"
                                                         class="rounded-5" />

                                                </div>

                                                <div class="col-md-10">
                                                    <div class="row">

                                                        <div class="col-md-8">
                                                            <strong>
                                                                @detalle.Numero - @detalle.NombreCandidato
                                                            </strong>
                                                        </div>
                                                        <div class="col-md-4">
                                                            <strong class="float-end">
                                                                @detalle.VotosCandidato
                                                            </strong>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-12">
                                                            <ResultBar Parcial="@detalle.VotosCandidato" Total="@Total" Color="@resultado.ColorPartido" />

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            </Body>
                        </Card>
                    }
                }

            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <h2 class="float-end">
                    @Total
                </h2>
                <h2>
                    TOTAL VOTOS:
                </h2>

            </div>
        </div>
    </Body>
</Card>



@inject ApiClient _apiClient;
@inject IToaster _toaster;
@implements IDisposable
@inject NavigationManager _navigation
@code {
    protected override void OnInitialized()
    {
        _apiClient.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _apiClient.OnChange -= StateHasChanged;
    }


    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        await CargarCargos();
        await CargarPuestos();
        CargarMesas();
        await CargarResultados();

        await Conectar();
    }

    protected async Task Conectar()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(_navigation.ToAbsoluteUri("/Resultados/Noify"))
            .Build();

        hubConnection.On<string, int, int>("NotifyResult", async (user, idCargo, idPuesto) => {
            _toaster.Success("Se ha registrado un nuevo resultado");            
            await CargarResultados();
        });

        await hubConnection.StartAsync();

    }

    public int IdCargo { get; set; }
    public List<Cargo> ListaCargos { get; set; }
    protected async Task CargarCargos()
    {
        var res = await _apiClient.GetAsync<List<Cargo>>("api/Cargos");
        if (res.IsSuccess)
        {
            ListaCargos = res.Model.OrderBy(x => x.Id).ToList();
            if (ListaCargos.Count > 0)
            {
                IdCargo = ListaCargos.FirstOrDefault().Id;
            }
            else
            {
                _toaster.Error("No hay cargos registrados");
            }
        }
        else
        {
            _toaster.Error(res.Message);
            ListaCargos = new List<Cargo>();
        }
    }
    protected async Task AlCambiarCargo(ChangeEventArgs e)
    {
        IdCargo = Convert.ToInt32(e.Value);
        await CargarResultados();
    }


    public List<PuestoModel> Puestos { get; set; }
    public int IdPuesto { get; set; }
    public int IdMesa { get; set; }

    protected async Task CargarPuestos()
    {
        var res = await _apiClient.GetAsync<List<PuestoModel>>("api/Puestos");
        if (res.IsSuccess)
        {
            Puestos = res.Model.OrderBy(x => x.Number).ToList();
        }
        else
        {
            Puestos = new List<PuestoModel>();
            _toaster.Error(res.Message);
        }
    }
    protected async void AlCambiarPuesto(ChangeEventArgs e)
    {
        IdPuesto = Convert.ToInt32(e.Value);
        CargarMesas();
        await CargarResultados();
    }

    protected void CargarMesas()
    {
        if (Puestos.Count > 0)
        {
            var puesto = Puestos.FirstOrDefault(x => x.Id == IdPuesto);
        }
    }
    protected async void AlCambiarMesa(ChangeEventArgs e)
    {
        IdMesa = Convert.ToInt32(e.Value);
        await CargarResultados();
    }

    public List<ResultadoGeneralModel> Resultados { get; set; } = new List<ResultadoGeneralModel>();
    public int Total => Resultados.Sum(x => x.VotosCandidato);
    protected async Task CargarResultados()
    {
        var res = await _apiClient.GetAsync<List<ResultadoGeneralModel>>($"api/Resultados/Consolidado/{IdCargo}/{IdPuesto}/{IdMesa}");
        if (res.IsSuccess)
        {
            Resultados = res.Model;
            await InvokeAsync(StateHasChanged);
        }
        else
        {
            _toaster.Error(res.Message);
        }
    }
}
